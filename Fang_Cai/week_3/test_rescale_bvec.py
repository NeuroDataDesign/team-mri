import unittest
import warnings
import os
warnings.simplefilter("ignore")
import numpy as np
import os.path as op
# import ndmg

# input data
CONTENT_in = np.array([[ 0.00000000e+00, -2.03325346e-01,  1.97708115e-01,
	         4.01805073e-01, -4.03123289e-01, -2.01737255e-01,
	        -8.53421509e-01, -7.31238365e-01, -4.06789303e-01,
	        -7.32634306e-01, -6.50504768e-01, -3.22355449e-01,
	        -3.23905617e-01, -6.49987698e-01, -9.78756189e-01,
	        -8.54325116e-01,  7.35120033e-04,  1.88436022e-03,
	         6.54135048e-01,  3.28634709e-01,  1.97367832e-01,
	         2.03872412e-01,  6.51154637e-01,  3.23619336e-01,
	         1.99623540e-01,  4.03123289e-01,  7.31922328e-01,
	         7.28641093e-01,  8.52419436e-01,  8.57252657e-01,
	         9.79328752e-01],
	       [ 0.00000000e+00,  5.19142509e-01,  5.19668162e-01,
	         1.75685704e-01,  7.31595099e-01,  9.41754699e-01,
	         5.17921686e-01,  5.19749045e-01,  1.76111132e-01,
	         1.75959527e-01,  7.30204821e-01,  9.40912068e-01,
	         5.18818855e-01,  5.19871831e-01,  1.75626218e-01,
	         1.75781012e-01,  7.31228113e-01,  9.41592932e-01,
	         5.18889546e-01,  5.19986689e-01, -1.75376430e-01,
	         1.75468266e-01,  7.30292439e-01,  9.41025853e-01,
	         9.40698802e-01,  7.31595099e-01,  1.75805867e-01,
	         5.18680155e-01,  5.18867075e-01,  1.76136464e-01,
	         1.75544515e-01],
	       [ 0.00000000e+00, -8.30150485e-01, -8.31177771e-01,
	        -8.98714185e-01, -5.49781978e-01, -2.69072831e-01,
	        -5.85563667e-02, -4.41759408e-01, -8.96385729e-01,
	        -6.57483995e-01,  2.08912745e-01,  1.03785343e-01,
	         7.91146100e-01,  5.54300666e-01,  1.05790980e-01,
	         4.89111096e-01,  6.82132661e-01,  3.36748034e-01,
	         5.50328016e-01,  7.88424432e-01, -9.64514911e-01,
	         9.63144302e-01,  2.06568673e-01,  9.86959785e-02,
	        -2.74292260e-01, -5.49781978e-01, -6.58317506e-01,
	        -4.47272897e-01, -6.44830465e-02,  4.83832479e-01,
	         1.00495256e-01]])

CONTENT_out = np.array([[ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00],
						[-2.03325349e-01,  5.19142517e-01, -8.30150498e-01],
						[ 1.97708117e-01,  5.19668166e-01, -8.31177778e-01],
						[ 4.01805079e-01,  1.75685707e-01, -8.98714199e-01],
						[-4.03123289e-01,  7.31595100e-01, -5.49781978e-01],
						[-2.01737253e-01, 9.41754689e-01, -2.69072828e-01],
						[-8.53421512e-01,  5.17921688e-01, -5.85563669e-02],
						[-7.31238368e-01,  5.19749047e-01, -4.41759410e-01],
						[-4.06789294e-01, 1.76111128e-01, -8.96385710e-01],
						[-7.32634311e-01,  1.75959528e-01, -6.57484000e-01],
						[-6.50504746e-01,  7.30204796e-01, 2.08912738e-01],
						[-3.22355457e-01,  9.40912090e-01,  1.03785345e-01],
						[-3.23905616e-01,  5.18818854e-01,  7.91146098e-01],
						[-6.49987712e-01,  5.19871842e-01,  5.54300678e-01],
						[-9.78756200e-01,  1.75626220e-01,  1.05790981e-01],
						[-8.54325102e-01,  1.75781009e-01,  4.89111088e-01],
						[ 7.35120011e-04,  7.31228091e-01,  6.82132640e-01],
						[ 1.88436018e-03,  9.41592914e-01,  3.36748027e-01],
						[ 6.54135065e-01,  5.18889560e-01,  5.50328031e-01],
						[ 3.28634707e-01,  5.19986685e-01,  7.88424427e-01],
						[ 1.97367835e-01, -1.75376433e-01, -9.64514927e-01],
						[ 2.03872410e-01,  1.75468264e-01,  9.63144293e-01],
						[ 6.51154629e-01,  7.30292430e-01,  2.06568670e-01],
						[ 3.23619332e-01,  9.41025840e-01,  9.86959772e-02],
						[ 1.99623536e-01,  9.40698784e-01, -2.74292255e-01],
						[ 4.03123289e-01,  7.31595100e-01, -5.49781978e-01],
						[ 7.31922351e-01,  1.75805873e-01, -6.58317527e-01],
						[ 7.28641097e-01,  5.18680158e-01, -4.47272899e-01],
						[ 8.52419436e-01,  5.18867075e-01, -6.44830465e-02],
						[ 8.57252640e-01,  1.76136461e-01,  4.83832469e-01],
						[ 9.79328763e-01,  1.75544517e-01,  1.00495257e-01]])

def rescale_bvec(bvec, bvec_new):
    """Normalizes b-vectors to be of unit length for the non-zero b-values. If the b-value is 0, the vector is untouched
    
    Parameters
    ----------
    bvec : str
        Path to the original b-vectors file (bvec)
    bvec_new : str
        Path to the new (normalized) b-vectors file. Must have extension '.bvec'
    """
    
    bv1 = np.array(np.loadtxt(bvec))
    # Enforce proper dimensions
    bv1 = bv1.T if bv1.shape[0] == 3 else bv1

    # Normalize values not close to norm 1
    bv2 = [
        b / np.linalg.norm(b) if not np.isclose(np.linalg.norm(b), 0) else b
        for b in bv1
    ]

    try:
        assert "bvec" in bvec_new
        np.savetxt(bvec_new, bv2)
        pass
    except AssertionError:
        print(
            "Error: your new b-vector file must have extension .bvec to"
            + " be compatible with the the pipeline."
        )
        pass
    else:
        pass
    pass
						

def test_rescale_bvec(tmp_path):
    d = tmp_path / "sub"
    d.mkdir()
    temp_in = d / "test_in.bvec"
    temp_out = d / "test_out.bvec"
    np.savetxt(temp_in, CONTENT_in)
	#np.savetext(temp_out, CONTENT_out)

    rescale_bvec(str(temp_in), str(temp_out))
    test = np.loadtxt(str(temp_out))
    assert np.allclose(test, CONTENT_out)

# test_rescale_bvec(tmp_path)

# def TestForBvec():
    # bvec = (r"C:\Users\Veroniiica\Python\sub-0025864_ses-1_dwi.bvec")
    # bvec_new = (r"C:\Users\Veroniiica\sub-0025864_ses-1_dwi_test.bvec")
    # rescale_bvec(bvec, bvec_new)
    # print(bvec_new)
    # return 0

# TestForBvec()

